// Code generated by goctl. DO NOT EDIT.
package types

type Comment struct {
	CommentID       string     `json:"comment_id"`
	SubjectID       string     `json:"subject_id"`
	RootID          string     `json:"root_id"`
	ParentID        string     `json:"parent_id"`
	DialogID        string     `json:"dialog_id"`
	AuthorID        string     `json:"author_id"`
	LikeCount       int        `json:"like_count"`
	Floor           int        `json:"floor"`
	CreatedAt       string     `json:"created_at"`
	SubCommentCount int        `json:"sub_comment_count"`
	Content         string     `json:"content"`
	SubComments     []*Comment `json:"sub_comments"`
}

type CreateCommentRequest struct {
	SubjectID string `json:"subject_id"`
	RootID    string `json:"root_id"`
	ParentID  string `json:"parent_id"`
	DialogID  string `json:"dialog_id"`
	Content   string `json:"content"`
}

type CreateCommentResponse struct {
	Comment Comment `json:"comment"`
}

type DeleteCommentRequest struct {
	CommentID string `path:"comment_id"`
}

type DeleteCommentResponse struct {
}

type GetCommentRequest struct {
	CommentID string `path:"commentID"`
}

type GetCommentResponse struct {
	Comment Comment `json:"comment"`
}

type GetCommentsByPostIDRequest struct {
	PostID string `path:"postID"`
	PaginationParams
}

type GetCommentsByPostIDResponse struct {
	Comments  []Comment `json:"comments"`
	Paginator Paginator `json:"paginator"`
}

type PaginationParams struct {
	Page  int64  `path:"page"`
	Size  int64  `path:"size"`
	Order string `path:"order"`
}

type Paginator struct {
	TotalRecord int64 `json:"total_record"`
	TotalPage   int   `json:"total_page"`
	Offset      int   `json:"offset"`
	Limit       int   `json:"limit"`
	CurrPage    int   `json:"curr_page"`
	PrevPage    int   `json:"prev_page"`
	NextPage    int   `json:"next_page"`
}

type Post struct {
	PostID    string   `json:"post_id"`
	CreatedAt string   `json:"created_at"`
	Title     string   `json:"title"`
	Project   Project  `json:"project"`
	Content   string   `json:"content"`
	Author    UserInfo `json:"author"`
}

type Project struct {
	ProjectID     string   `json:"project_id"`
	Name          string   `json:"name"`
	Introduction  string   `json:"introduction"`
	Maintainer    UserInfo `json:"maintainer"`
	Role          string   `json:"role"`
	HeadCountInfo string   `json:"head_count_info"`
	Progress      string   `json:"progress"`
}

type Subject struct {
	SubjectID        string `json:"subject_id"`
	PostID           string `json:"post_id"`
	AllCommentCount  int    `json:"all_comment_count"`
	RootCommentCount int    `json:"root_comment_count"`
	Status           int8   `json:"status"`
}

type UserInfo struct {
	WxUid        string `json:"wx_uid"`
	Avatar       string `json:"avatar"`
	School       string `json:"school"`
	Grade        int64  `json:"grade"`
	Introduction string `json:"introduction"`
	PostCount    int64  `json:"post_count"`
	Username     string `json:"username"`
}
